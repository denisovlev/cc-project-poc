---
- hosts: db
  become: true
  gather_facts: no
  vars:
    dbname: ubuntu
    dbuser: ubuntu
    dbpassword: password
  pre_tasks:
    - name: 'install python2'
      raw: sudo apt-get -y install python-simplejson
  tasks:
  - name: install python3 packages
    apt: "pkg={{ item }} state=latest"
    with_items:
      - python3
      - python3-venv
      - python3-dev
      - build-essential
      - libssl-dev
      - libffi-dev
      - python3-pip
      - postgresql
      - postgresql-contrib
      - libpq-dev
      - python-pip
      - redis-server
    environment:
      LC_ALL: C
  - name: install pip packages
    pip:
      name: "-r /vagrant/requirements.txt"
      executable: /usr/bin/pip3
    environment:
      LC_ALL: C
  - name: install pip packages for db
    pip:
      name: "psycopg2 psycopg2-binary"
      executable: /usr/bin/pip
    environment:
      LC_ALL: C
  - name: add new configuration to env
    blockinfile:
      path: /vagrant/.env
      block: |
        DBHOST='localhost'

  - name: add new configuration to "postgresql.conf"
    become: yes
    become_user: postgres
    blockinfile:
      dest: /etc/postgresql/9.5/main/postgresql.conf
      block: |
        listen_addresses = '*'

  - name: add new configuration to "pg_hba.conf"
    become: yes
    become_user: postgres
    blockinfile:
      dest: /etc/postgresql/9.5/main/pg_hba.conf
      block: |
        host    all             all             0.0.0.0/0                md5


  - service:
      name: postgresql
      state: restarted

  - name: ensure database is created
    become: yes
    become_user: postgres
    postgresql_db: name={{dbname}}

  - name: ensure user has access to database
    become: yes
    become_user: postgres
    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL

  - name: ensure user does not have unnecessary privilege
    become: yes
    become_user: postgres
    postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB

  - name: ensure no other user can access the database
    become: yes
    become_user: postgres
    postgresql_privs: db={{dbname}} role=PUBLIC type=database priv=ALL state=absent

  - name: run migration
    shell: "python3 /vagrant/manage.py migrate --settings=settings.prod"

  - name: run redis
    shell: "sudo redis-server &"
    async: 60
    poll: 0

- hosts: webapp
  become: true
  gather_facts: no
  pre_tasks:
    - name: 'install python2'
      raw: sudo apt-get -y install python-simplejson
  tasks:
  - name: install python3 packages
    apt: "pkg={{ item }} state=latest"
    with_items:
      - python3
      - python3-venv
      - python3-dev
      - build-essential
      - libssl-dev
      - libffi-dev
      - python3-pip
      - libpq-dev
      - python-pip
    environment:
      LC_ALL: C
  - name: install pip packages
    pip:
      name: "-r /vagrant/requirements.txt"
      executable: /usr/bin/pip3
    environment:
      LC_ALL: C
  - name: add new configuration to env
    blockinfile:
      path: /vagrant/.env
      block: |
        DBHOST='172.31.19.211'

  - name: run server
    shell: "sudo python3 /vagrant/manage.py runserver --settings=settings.prod 0.0.0.0:80 > /vagrant/log.txt 2>&1 &"
    async: 60
    poll: 0

- hosts: background-job
  become: true
  gather_facts: no
  pre_tasks:
    - name: 'install python2'
      raw: sudo apt-get -y install python-simplejson
  tasks:
  - name: install python3 packages
    apt: "pkg={{ item }} state=latest"
    with_items:
      - python3
      - python3-venv
      - python3-dev
      - build-essential
      - libssl-dev
      - libffi-dev
      - python3-pip
      - libpq-dev
      - python-pip
      - redis-server
    environment:
      LC_ALL: C
  - name: install pip packages
    pip:
      name: "-r /vagrant/requirements.txt"
      executable: /usr/bin/pip3
    environment:
      LC_ALL: C

  - name: add new configuration to env
    blockinfile:
      path: /vagrant/.env
      block: |
        DBHOST='172.31.19.211'

  - name: run raco reader worker
    shell: "cd /vagrant; DJANGO_SETTINGS_MODULE=settings.prod celery -A raco_reader worker -l info &"
    async: 60
    poll: 0

  - name: run raco reader beat
    shell: "cd /vagrant; DJANGO_SETTINGS_MODULE=settings.prod celery -A raco_reader beat -l info &"
    async: 60
    poll: 0

- hosts: mailer-job
  become: true
  gather_facts: no
  pre_tasks:
    - name: 'install python2'
      raw: sudo apt-get -y install python-simplejson
  tasks:
  - name: install python3 packages
    apt: "pkg={{ item }} state=latest"
    with_items:
      - python3
      - python3-venv
      - python3-dev
      - build-essential
      - libssl-dev
      - libffi-dev
      - python3-pip
      - libpq-dev
      - python-pip
      - redis-server
    environment:
      LC_ALL: C
  - name: install pip packages
    pip:
      name: "-r /vagrant/requirements.txt"
      executable: /usr/bin/pip3
    environment:
      LC_ALL: C

  - name: add new configuration to env
    blockinfile:
      path: /vagrant/.env
      block: |
        DBHOST='172.31.19.211'

  - name: run mailer worker
    shell: "cd /vagrant; DJANGO_SETTINGS_MODULE=settings.prod celery -A mailer_job worker -l info &"
    async: 60
    poll: 0

  - name: run mailer beat
    shell: "cd /vagrant; DJANGO_SETTINGS_MODULE=settings.prod celery -A mailer_job beat -l info &"
    async: 60
    poll: 0
